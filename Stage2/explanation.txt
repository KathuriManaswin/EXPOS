# Stage 2: Loading a File and Verifying Disk Allocation

## Overview
In this stage, we load a manually created file (`sample.dat`) into the XFS file system and verify that disk blocks are correctly allocated to it. We also check the inode table and retrieve data from the disk for analysis.

## Steps and Commands Used

1. **Loading `sample.dat` into the XFS File System**  
   `load --data sample.dat` (Executed in the XFS interface)  
   - This command loads `sample.dat` into the disk, assigning a disk block to it.

2. **Verifying Disk Allocation**  
   `df` (Executed in the XFS interface)  
   - The `df` command checks the disk free list, showing whether a block has been allocated to `sample.dat`.

3. **Checking the Inode Table Entry**  
   `copy 3 4 $HOME/myexpos/inode_table.txt` (Executed in the XFS interface)  
   - This command copies the inode user table data into `inode_table.txt` inside the `myexpos` folder.  

   `dump --inodeusertable` (Executed in the XFS interface)  
   - This command outputs the inode user table data directly into `inodeusertable.txt` inside the XFS interface folder.  

   **Difference Between the Two Commands**:  
   - `copy 3 4 $HOME/myexpos/inode_table.txt` stores the file in the `myexpos` directory.  
   - `dump --inodeusertable` outputs the data into `inodeusertable.txt` inside the XFS interface folder.

4. **Copying and Viewing Data Blocks from the XFS Disk**  
   `copy 69 69 $HOME/myexpos/data.txt` (Executed in the XFS interface)  
   - This command copies the data blocks from the XFS disk and displays them as a UNIX file (`data.txt`) in `myexpos`.  

   **Note:** The output format is **16 characters per line** because a word in XFS is 16 characters long.

5. **Alternative Way to Export Data**  
   `export sample.dat $HOME/myexpos/data.txt` (Executed in the XFS interface)  
   - This command also copies the contents of `sample.dat` to `data.txt`, allowing us to view its contents outside XFS.

## Consequences
- `sample.dat` is now properly stored in the file system.
- We confirmed that a disk block was allocated by checking the disk free list.
- The inode table was successfully updated with the file’s metadata.
- The file’s contents were retrieved in UNIX format for verification.
