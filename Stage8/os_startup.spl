loadi(4,17); //Timer interrupt routine
loadi(5,18);

loadi(63,13); //Library
loadi(64,14);

loadi(65,7); //INIT Program
loadi(66,8);

loadi(22,35); //INT10 module
loadi(23,36);

loadi(2,15); //Exception handler
loadi(3,16);

PTBR=PAGE_TABLE_BASE;
PTLR=10; // 2 for library, 2 for heap, 2 for stack, 4 for code (2 unused for now)

//Library
[PTBR+0]=63; //Library code must be attached to first and second logical pages for each process
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//Heap
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//Code
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//Stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

[76*512]=[65*512+1]; //the entry point value(2nd entree of the header) is the address of the first instructrion to be executed when program is run
SP=8*512;            //stack starts from logical page 8
ireturn;
